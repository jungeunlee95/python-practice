{"changed":true,"filter":false,"title":"prpr.1","tooltip":"/prpr.1","value":"import requests\nimport json\nimport os \nfrom pprint import pprint as pp\nimport csv\ndate2 = [\"20181111\",\"20181118\",\"20181125\",\"20181202\",\"20181209\",\"20181216\",\"20181223\",\"20181230\",\"20190106\",\"20190113\"]\nmovie_key = os.getenv('MOVIE_TOKEN')\nurl = 'http://www.kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchWeeklyBoxOfficeList.json'\nmovie_list = []\nfor targetDt in date2 : \n    params = {\n        'key': movie_key,\n        'targetDt':targetDt,\n        'weekGb':\"0\"\n    }\n    res = requests.get(url, params=params).text\n    document = json.loads(res)\n    movie_info = document['boxOfficeResult']['weeklyBoxOfficeList']\n    for i in movie_info:\n        b = {\"movie_code\" : i[\"movieCd\"], \"title\" : i[\"movieNm\"], \n              \"audience\": int(i[\"audiAcc\"]), \"recorded_at\" : document['boxOfficeResult']['showRange'].split(\"~\")[1]}\n        movie_list.append(b)\n\ncheck = []    \n\n# 누적 관객 수로 정렬\nmovie_list = sorted(movie_list, key=lambda k: k['해당일누적관객수']) \n\nwith open('boxoffice.csv','a') as f:\n    field = (\"영화대표코드\", \"영화명\", \"해당일누적관객수\", \"해당일\")\n    writer = csv.DictWriter(f, fieldnames=field)\n    writer.writeheader()\n    \n    for movie in movie_list:\n        if(movie[\"영화명\"] not in check):\n            writer.writerow(movie)\n            check.append(movie[\"영화명\"])\n        #### 여기에 관객수 더 크면 넣어주는 코드 작성해야해!!!!!\n\n# 영화 대표 코드 movieCd , 영화명 movieNm, 해당일 누적관색수 audiAcc, 해당일 showRange\n# 해당일 누적관객수 중복 -> 최신정보 반영","undoManager":{"mark":-2,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":40,"column":25},"action":"insert","lines":["import requests","import json","import os ","from pprint import pprint as pp","import csv","date2 = [\"20181111\",\"20181118\",\"20181125\",\"20181202\",\"20181209\",\"20181216\",\"20181223\",\"20181230\",\"20190106\",\"20190113\"]","movie_key = os.getenv('MOVIE_TOKEN')","url = 'http://www.kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchWeeklyBoxOfficeList.json'","movie_list = []","for targetDt in date2 : ","    params = {","        'key': movie_key,","        'targetDt':targetDt,","        'weekGb':\"0\"","    }","    res = requests.get(url, params=params).text","    document = json.loads(res)","    movie_info = document['boxOfficeResult']['weeklyBoxOfficeList']","    for i in movie_info:","        b = {\"movie_code\" : i[\"movieCd\"], \"title\" : i[\"movieNm\"], ","              \"audience\": int(i[\"audiAcc\"]), \"recorded_at\" : document['boxOfficeResult']['showRange'].split(\"~\")[1]}","        movie_list.append(b)","","check = []    ","","# 누적 관객 수로 정렬","movie_list = sorted(movie_list, key=lambda k: k['해당일누적관객수']) ","","with open('boxoffice.csv','a') as f:","    field = (\"영화대표코드\", \"영화명\", \"해당일누적관객수\", \"해당일\")","    writer = csv.DictWriter(f, fieldnames=field)","    writer.writeheader()","    ","    for movie in movie_list:","        if(movie[\"영화명\"] not in check):","            writer.writerow(movie)","            check.append(movie[\"영화명\"])","        #### 여기에 관객수 더 크면 넣어주는 코드 작성해야해!!!!!","","# 영화 대표 코드 movieCd , 영화명 movieNm, 해당일 누적관색수 audiAcc, 해당일 showRange","# 해당일 누적관객수 중복 -> 최신정보 반영"],"id":1}]]},"ace":{"folds":[],"scrolltop":203.5,"scrollleft":0,"selection":{"start":{"row":40,"column":25},"end":{"row":40,"column":25},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":11,"state":"start","mode":"ace/mode/text"}},"timestamp":1548073967157}